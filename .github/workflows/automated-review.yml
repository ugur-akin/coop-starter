##############################
# TODO: Conventionalize cases for actions/workflows
# TODO: Conventionalize inputs for actions
# TODO: Clean up
# TODO: Look into performance optimizations via cache
# TODO: Look into build matrix job success ideas
# TODO: Look into getting pending review without id
#################################
name: Review pull request for commonly encountered issues
on:
  pull_request:
    types: [opened, reopened]
permissions:
  pull-requests: write
env:
  URL: ${{ github.event.pull_request.url}}
  OWNER: ${{ github.event.repository.owner.login }}
  REPO: ${{ github.event.repository.name }}
  PR: ${{ github.event.pull_request.number }}
  PR_PAYLOAD: ${{ toJSON(github.event.pull_request)}}
jobs:
  collect-pr-info:
    name: Compile review keywords from PR (currently only labels and 'generic' keyword)
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.scrape-pr-info.outputs.issues }}
      labels: ${{ steps.scrape-pr-info.outputs.labels }}
      keywords: ${{ steps.scrape-pr-info.outputs.keywords }}
      reviews: ${{ steps.scrape-pr-info.outputs.reviews }}
    steps:
      - uses: actions/checkout@v2
      - id: scrape-pr-info
        name: Get linked issues and labels for related to the PR
        uses: ./.github/actions/pull-request-keywords
        with:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}

  init-pr-review:
    name: Initialize the review (review state will be 'pending')
    runs-on: ubuntu-latest
    outputs:
      review-id: ${{ steps.init-review.outputs.data.id }}
    steps:
      - id: init-review
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews
          accept: application/vnd.github.v3+json
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          pull_number: ${{ env.PR }}
          GITHUB_TOKEN: ${{ github.token }}

  run-automated-reviews:
    name: >
      Call automated review workflows based on
      linked PR issues and labels
    runs-on: ubuntu-latest
    needs: [collect-pr-info, init-pr-review]
    if: ${{ needs.collect-pr-info.result == 'success' }}
    continue-on-error: true
    strategy:
      matrix:
        review: ${{ fromJSON(needs.collect-pr-info.outputs.reviews) }}
      fail-fast: false
      max-parallel: 10
    env:
      common-issue-tag: ${{ matrix.review }}
      review-id: ${{ needs.init-pr-review.outputs.review-id }}
    steps:
      # TODO: Implement this action
      - uses: actions/checkout@v2.x
      - uses: ./.github/actions/review-for-common-issue
        with:
          common-issue-tag: ${{ env.common-issue-tag }}
          owner: ${{ env.OWNER }}
          repository: ${{ env.REPO }}
          pull_number: ${{ env.PR }}
          review_id: ${{ env.review-id }}
          pull_payload: ${{ github.event.pull_request }}
          GITHUB_TOKEN: ${{ github.token }}
  submit-or-dismiss-review:
    name: >
      Submit or dismiss review based on what/how many reviews
      succeeded
    runs-on: ubuntu-latest
    needs: [init-pr-review, run-automated-reviews]
    env:
      review-id: ${{ needs.init-pr-review.outputs.review-id }}
    steps:
      - id: submit-review
        uses: octokit/request-action@v2.x
        with:
          route: PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events
          accept: application/vnd.github.v3+json
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          pull_number: ${{ env.PR }}
          review_id: ${{ env.review-id }}
          GITHUB_TOKEN: ${{ github.token }}
      - id: dismiss-review
        if: ${{ failure() }}
        uses: octokit/request-action@v2.x
        with:
          route: DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}
          accept: application/vnd.github.v3+json
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          pull_number: ${{ env.PR }}
          review_id: ${{ env.review-id }}
          event: COMMENT
          GITHUB_TOKEN: ${{ github.token }}
