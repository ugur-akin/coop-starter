name: Review pull request for commonly encountered issues
on:
  pull_request:
    types: [opened, reopened]
permissions:
  pull-requests: write
env:
  URL: ${{ github.event.pull_request.url}}
  OWNER: ${{ github.event.repository.owner.login }}
  REPO: ${{ github.event.repository.name }}
  PR: ${{ github.event.pull_request.number }}
  PR_PAYLOAD: ${{ toJSON(github.event.pull_request)}}
jobs:
  collect-pr-info:
    name: Compile review keywords from PR (currently only labels and 'generic' keyword)
    runs-on: ubuntu-latest
    outputs:
      issues: ${{ steps.scrape-pr-info.outputs.issues }}
      labels: ${{ steps.scrape-pr-info.outputs.labels }}
      keywords: ${{ steps.scrape-pr-info.outputs.keywords }}
      reviews: ${{ steps.scrape-pr-info.outputs.reviews }}
    steps:
      - uses: actions/checkout@v2
      - id: scrape-pr-info
        name: Get linked issues and labels for related to the PR
        uses: ./.github/actions/pull-request-keywords
        with:
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_API_KEY }}
          AIRTABLE_BASE_ID: ${{ secrets.AIRTABLE_BASE_ID }}

  init-pr-review:
    name: Initialize the review (Review state will be 'pending')
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews
          accept: application/vnd.github.v3+json
          owner: ${{ env.OWNER }}
          repo: ${{ env.REPO }}
          pull_number: ${{ env.PR }}
          GITHUB_TOKEN: ${{ github.token }}

  run-automated-reviews:
    name: >
      Call automated review workflows based on
      linked PR issues and labels
    runs-on: ubuntu-latest
    needs: [collect-pr-info, init-pr-review]
    if: ${{ needs.collect-pr-info.result == 'success' }}
    continue-on-error: true
    strategy:
      matrix:
        reviews: ${{ fromJSON(needs.collect-pr-info.outputs.reviews) }}
      fail-fast: false
      max-parallel: 10
    steps:
      - id: start-relevant-reviews
        name: Echo review name until implemented
        # TODO: Implement a workflow that runs an automated
        #       review based on the name given.
        env:
          review: ${{ matrix.review }}
        run: |
          echo "$review"

  submit-or-dismiss-review:
    name: >
      Submit or dismiss review based on what/how many reviews
      succeeded
    runs-on: ubuntu-latest
    needs: run-automated-reviews
    steps:
      - run: echo "I do stat check"
      - run: echo "I send the request"
